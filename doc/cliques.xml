#############################################################################
##
#W  cliques.xml
#Y  Copyright (C) 2016                                  Wilfred A. Wilson
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################
##

<#GAPDoc Label="IsClique">
<ManSection>
  <Oper Name="IsClique" Arg="digraph, l"/>
  <Oper Name="IsMaximalClique" Arg="digraph, l"/>
  <Returns><K>true</K> or <K>false</K>.</Returns>
  <Description>
    If <A>digraph</A> is a digraph and <A>l</A> is a duplicate-free list of
    vertices of <A>digraph</A>, then
    <C>IsClique(</C><A>digraph</A><C>,</C><A>l</A><C>)</C> returns
    <K>true</K> if and only if <A>l</A> defines a clique of <A>digraph</A>,
    and <C>IsMaximalClique(</C><A>digraph</A><C>,</C><A>l</A><C>)</C> returns
    <K>true</K> if and only if <A>l</A> defines a <E>maximal</E> clique of
    <A>digraph</A>. <P/>

    A set of vertices of a digraph defines a clique if and only if every
    vertex of the set is an out-neighbour in the digraph of all of the other
    vertices of the set.  Note that loops are not necessary for a clique.
    Equivalently, a clique is a set of vertices of the digraph which induces a
    complete digraph (when ignoring loops and multiple edges). <P/>

    A clique of a digraph is a <E>maximal</E> clique if it is not properly
    contained is another clique the digraph.
    <Example><![CDATA[
gap> gr := CompleteDigraph(4);;
gap> IsClique(gr, [1, 3, 2]);
true
gap> IsMaximalClique(gr, [1, 3, 2]);
false
gap> IsMaximalClique(gr, DigraphVertices(gr));
true
gap> gr := Digraph([[1, 2, 4, 4], [1, 3, 4], [2, 1], [1, 2]]);
<multidigraph with 4 vertices, 11 edges>
gap> IsClique(gr, [2, 3, 4]);
false
gap> IsMaximalClique(gr, [1, 2, 4]);
true]]></Example>
  </Description>
</ManSection>
<#/GAPDoc>

<#GAPDoc Label="IsIndependentSet">
<ManSection>
  <Oper Name="IsIndependentSet" Arg="digraph, l"/>
  <Oper Name="IsMaximalIndependentSet" Arg="digraph, l"/>
  <Returns><K>true</K> or <K>false</K>.</Returns>
  <Description>
    If <A>digraph</A> is a digraph and <A>l</A> is a duplicate-free list of
    vertices of <A>digraph</A>, then
    <C>IsIndependentSet(</C><A>digraph</A><C>,</C><A>l</A><C>)</C> returns
    <K>true</K> if and only if <A>l</A> defines an independent set of
    <A>digraph</A>, and
    <C>IsMaximalIndependentSet(</C><A>digraph</A><C>,</C><A>l</A><C>)</C>
    returns <K>true</K> if and only if <A>l</A> defines a <E>maximal</E>
    independent set of <A>digraph</A>. <P/>

    A set of vertices of a digraph is an independent set if and only if no
    vertex of the set is an out-neighbour in the digraph of any other
    vertex of the set. Equivalently, an independent set is a set of vertices
    of the digraph which induces an empty digraph.<P/>

    An independent of a digraph is a <E>maximal</E> independent set if it is
    not properly contained is another independent set of the digraph.
    <Example><![CDATA[
gap> gr := CycleDigraph(4);;
gap> IsIndependentSet(gr, [1]);
true
gap> IsMaximalIndependentSet(gr, [1]);
false
gap> IsIndependentSet(gr, [1, 4, 3]);
false
gap> IsIndependentSet(gr, [2, 4]);
true
gap> IsMaximalIndependentSet(gr, [2, 4]);
true
]]></Example>
  </Description>
</ManSection>
<#/GAPDoc>

<#GAPDoc Label="DigraphMaximalCliques">
<ManSection>
  <Func Name="DigraphMaximalCliques" Label="for a digraph and two
    lists and a number" Arg="digraph[, include[, exclude[, limit]]]"/>
  <Attr Name="DigraphMaximalCliquesAttr" Label="for a digraph"
    Arg="digraph"/>
  <Func Name="DigraphMaximalCliquesReps" Label="for a digraph and two
    lists and a number" Arg="digraph[, include[, exclude[, limit]]]"/>
  <Attr Name="DigraphMaximalCliquesRepsAttr" Label="for a
    digraph" Arg="digraph"/>
  <Func Name="DigraphMaximalClique" Label="for a digraph and two
    lists" Arg="digraph[, include[, exclude]]"/>
  <Returns>A list of lists of positive integers.</Returns>
  <Description>
    If <A>digraph</A> is digraph, then these functions and attributes return
    cliques of <A>digraph</A>. A clique is defined by the set of vertices
    which it contains; see <Ref Oper="IsClique"/>.<P/>
    
    The optional arguments
    <A>include</A> and <A>exclude</A> must be (possibly empty) duplicate-free
    disjoint lists of vertices of <A>digraph</A>, and the optional argument
    <A>limit</A> must be either a positive integer or <C>infinity</C>. By
    default, <A>include</A> and <A>exclude</A> are empty, and <A>limit</A> is
    <C>infinity</C>. The argument <A>include</A> must define a clique of
    <A>digraph</A>, <A>limit</A> will provide an upper bound on the number of
    cliques to be returned.<P/>
    
    The number of cliques of a digraph - indeed, even the number of maximal
    cliques of a digraph - can be very large relative to the number of
    vertices, and so for even relatively small digraphs this computation could
    be very time-consuming.  The algorithms used to calculate maximal cliques
    make use of the <Ref Attr="DigraphGroup"/> of <A>digraph</A> to reduce the
    search space. Therefore the speed of computation may be improved if the
    <Ref Attr="DigraphGroup"/> is as large as possible.
    <P/>

    <List>
      <Mark>Maximal cliques</Mark>
      <Item>
        <C>DigraphMaximalCliques(</C><A>digraph</A><C>,
        </C><A>include</A><C>, </C><A>exclude</A><C>,
        </C><A>limit</A><C>)</C> returns a duplicate-free list of maximal
        cliques of <A>digraph</A> which contain all of the vertices of
        <A>include</A> and which do not contain any of the vertices of
        <A>exclude</A>.
        The computation may be significantly faster if <A>include</A> and
        <A>exclude</A> are invariant under the action of the <Ref
          Attr="DigraphGroup"/> of <A>digraph</A>.
      </Item>

      <Item>
        To use <C>DigraphMaximalCliquesReps</C>, the arguments <A>include</A>
        and <A>exclude</A> must each be invariant under the action of the <Ref
          Attr="DigraphGroup"/> of <A>digraph</A>.
        If this is the case, then
        <C>DigraphMaximalCliquesReps(</C><A>digraph</A><C>,
        </C><A>include</A><C>, </C><A>exclude</A><C>, </C><A>limit</A><C>)</C>
        returns a list of orbits representatives (under the action of the <Ref
          Attr="DigraphGroup"/> of <A>digraph</A>) of maximal cliques of
        <A>digraph</A> which contain all of the vertices of <A>include</A> and
        which do not contain any of the vertices of <A>exclude</A>.
      </Item>

      <Item>
        <C>DigraphMaximalClique(</C><A>digraph</A><C>, </C><A>include</A><C>,
        </C><A>exclude</A><C>)</C> returns the clique
        <C>DigraphMaximalCliques(</C><A>digraph</A><C>, </C><A>include</A><C>,
        </C><A>exclude</A><C>, 1)[1]</C> if such a clique exists, else it returns
        <K>fail</K>.
      </Item>

      <Mark>Cliques</Mark>
      <Item>
        <C>DigraphCliques</C>
      </Item>
      <Item>
        <C>DigraphCliquesReps</C>
      </Item>
      <Item>
        <C>DigraphClique</C>
      </Item>
    </List>

    The attributes <C>DigraphMaximalCliquesAttr</C> and
    <C>DigraphMaximalCliquesRepsAttr</C> exist to store the values
    of <C>DigraphMaximalCliques(</C><A>digraph</A><C>)</C> and
    <C>DigraphMaximalCliquesReps(</C><A>digraph</A><C>)</C> respectively,
    to avoid repeating computation. <P/>

    The algorithms used to calculate maximal cliques are based on the
    Bron-Kerbosch algorithm.
    <Example><![CDATA[
gap> true;;
]]></Example>
  </Description>
</ManSection>
<#/GAPDoc>

<#GAPDoc Label="DigraphMaximalIndependentSets">
<ManSection>
  <Attr Name="DigraphMaximalIndependentSets" Label="for a digraph"
    Arg="digraph"/>
  <Oper Name="DigraphMaximalIndependentSets" Label="for a digraph and one or
    two lists" Arg="digraph, l[, m]"/>
  <Attr Name="DigraphMaximalIndependentSetsReps" Arg="digraph"/>
  <Attr Name="DigraphMaximalIndependentSet" Label="for a digraph"
    Arg="digraph"/>
  <Oper Name="DigraphMaximalIndependentSet" Label="for a digraph and one or
    two lists" Arg="digraph, l[, m]"/>
  <Attr Name="DigraphIndependentSet" Label="for a digraph" Arg="digraph"/>
  <Oper Name="DigraphIndependentSet" Label="for a digraph and one or two
    lists" Arg="digraph, l[, m]"/>
  <Returns>A list of lists of positive integers.</Returns>
  <Description>
    <Example><![CDATA[
gap> 1;;
]]></Example>
  </Description>
</ManSection>
<#/GAPDoc>
